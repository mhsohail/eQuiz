@using eQuiz.Models;
@model ApplicationUser

@{
    ViewBag.Title = "Edit";
}
<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    @Html.HiddenFor(model => model.Id)

    <fieldset class="form-horizontal">
        <legend>Edit a user.</legend>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="checkbox">
            <h2>Select Role for User</h2>
            <hr />
            @foreach (Microsoft.AspNet.Identity.EntityFramework.IdentityRole role in TempData["roles"] as IEnumerable<Microsoft.AspNet.Identity.EntityFramework.IdentityRole>)
            {
                <div class="minimal-blue single-row">
                    <div class="checkbox">
                        @if (ContainsRole(role.Id))
                        {
                            <input type="checkbox" name="selectedRoles" checked="checked" value="@role.Id" id="@role.Name">
                            <label for="@role.Name">@role.Name </label>
                        }
                        else
                        {
                            <input type="checkbox" name="selectedRoles" value="@role.Id" id="@role.Name">
                            <label for="@role.Name">@role.Name </label>
                        }
                    </div>
                </div>
            }
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </fieldset>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@functions{

    public bool ContainsRole(string r)
    {
        var role = Model.Roles.Where(d => d.RoleId == r).FirstOrDefault();
        if (role == null)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

}

